AWS KMS (Key management Service)
-Anytime you hear "encryption" for an AWS service, it's most likely KMS
-Easy way to control access to your data, AWS managed keys for us
-Fully integrated with IAM for authorization

Seamlessly integrated into:
    -Amazon EBS: encrypt volumes
    -Amazon S3: Server side encryption of objects
    -Amazon Redshift: encryption of data
    -Amazon RDS: encryption of data
    -Amazon SSM: Parameter store


-Also can use the CLI /SDK



AWS KMS 101
    -Anytime you need to share sensitive information ... use KMS
        -Database password
        -Credentials
        -Private key of SSL certificates

    -The value in KMS is that the CMK used to encrypt data can never be retrieved by the user
        and the CMK can be rotated for extra security
    -Never ever store your secrets in plaintext, especially in your code!
    -Encrypted secrets can be stored in the code / environment variables
    -KMS can only help in encrypting up to 4KB of data per call
    -If data > 4 kb, use evelope encryption
    -To give access to KMS to someone:
        -Make sure the Key Policy allows the user
        -Make sure the IAM Policy allows the API calls

Manage AWS KMS:
    -Able to fully manage the keys & policies:
        -Create
        -Rotation policies
        -Disable
        -Enable

    -Able to audit key usage (using CloudTrail)
    -Three types of Customer Master Keys (CMK):
        -AWS Managed Service Default CMK: free
        -User Keys created in KMS: $1 /month
        -User Keys imported (must be 256-bit symmetric key): 1$ /month
    
    -Pay for API call to KMS ($0.03 / 10000 calls)

How KMS Works:
    -